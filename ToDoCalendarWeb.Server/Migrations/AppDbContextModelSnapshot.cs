// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoCalendarWeb.Controllers;

#nullable disable

namespace ToDoCalendarWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Diff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PropName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Diffs");
                });

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Period", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoutineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimePeriod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoutineId");

                    b.ToTable("Periods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06e6d9cb-8e1e-4640-b4c9-2acd4048e86d"),
                            DayOfWeek = 1,
                            Name = "Период",
                            RoutineId = new Guid("f62bddcc-6f3c-40d9-9d00-91762842caa5"),
                            TimePeriod = "{\"StartTime\":\"-10675199.02:48:05.4775808\",\"EndTime\":\"10675199.02:48:05.4775807\"}"
                        });
                });

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Routine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Routines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f62bddcc-6f3c-40d9-9d00-91762842caa5"),
                            Description = "Тестовая рутина",
                            Name = "Рутина"
                        });
                });

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTracked")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PeriodId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("250aa0cb-4ab1-48a1-b8c7-82a8fdeb5d5c"),
                            IsCompleted = false,
                            IsDraft = false,
                            IsTracked = true,
                            Name = "Задача1",
                            PeriodId = new Guid("06e6d9cb-8e1e-4640-b4c9-2acd4048e86d")
                        },
                        new
                        {
                            Id = new Guid("ee89b75e-0c8b-4603-9ed5-92dc22330796"),
                            IsCompleted = false,
                            IsDraft = false,
                            IsTracked = true,
                            Name = "Задача2",
                            PeriodId = new Guid("06e6d9cb-8e1e-4640-b4c9-2acd4048e86d")
                        },
                        new
                        {
                            Id = new Guid("750d8544-52af-416c-8d42-69fec5169a78"),
                            IsCompleted = false,
                            IsDraft = false,
                            IsTracked = true,
                            Name = "Задача3",
                            PeriodId = new Guid("06e6d9cb-8e1e-4640-b4c9-2acd4048e86d")
                        });
                });

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Period", b =>
                {
                    b.HasOne("ToDoCalendarWeb.Domain.Routine", null)
                        .WithMany("Periods")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Task", b =>
                {
                    b.HasOne("ToDoCalendarWeb.Domain.Period", null)
                        .WithMany("Tasks")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Period", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ToDoCalendarWeb.Domain.Routine", b =>
                {
                    b.Navigation("Periods");
                });
#pragma warning restore 612, 618
        }
    }
}
